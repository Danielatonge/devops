name: Continuous Integration

on:
  push:
    branches: [ main ]

jobs:
  lint_test:

    runs-on: ubuntu-latest
    env:
      working_dir: app_python
    steps:
    - 
      uses: actions/checkout@v2
    - 
      name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - 
      name: Cache
      uses: actions/cache@v2.1.6
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: ~/.cache/pip
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{ runner.os }}-pip-
    - 
      name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint pytest
        pip install -r ${{ env.working_dir }}/requirements.txt
    - 
      name: Lint with pylint
      run: |
        cd ${{ env.working_dir }}/Current_Moscow_Time
        pylint `ls |grep .py$|xargs`
      continue-on-error: false
    - 
      name: Test with pytest
      run: |
        cd ${{ env.working_dir }}/Current_Moscow_Time
        pytest
  
  build_push:
    needs: lint_test
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    env:
      REGISTRY: danielatonge
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.event.repository.name }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
